# improve colors
set -g default-terminal 'screen-256color'
bind r source-file ~/.tmux.conf

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind K resizep -U 5 # 跟选择窗格的设置相同，只是使用Uppercase
bind J resizep -D 5 # 同上
bind H resizep -L 5 # ...
bind L resizep -R 5 # ...

bind ^u swapp -U # 与上窗格交换 Ctrl-u
bind ^d swapp -D # 与下窗格交换 Ctrl-d

# # Rebinding the pane splitting bindings
# unbind % # Remove default bindings since we're replacing
bind | split-window -h
bind - split-window -v

# act like GNU screen
unbind C-b
set -g prefix C-a

# Allow C-A a to send C-A to application
bind C-a send-prefix

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# switch to last pane
# bind-key C-a last-pane

unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy Y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"



#supposedly fixes pausing in vim
set-option -sg escape-time 1


set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on


# # Set window notifications
setw -g monitor-activity off
set -g visual-activity on


# Macros

# Pipe pane to log file
bind [ pipe-pane -o "cat >>~/tmux.log" \; display-message "Toggled logging to ~/tmux.log"
bind ] pipe-pane \; display-message "Ended logging to ~/tmux.log"

# Sync panes
bind S set-window-option synchronize-panes on
bind s set-window-option synchronize-panes off



# Clear the current pane AND clear the pane's history
bind C-k send-keys 'C-l'\; clear-history



# reassign ; from last-pane to last-window
unbind \;
bind \; last-window

# reassign ' from select-window to last-pane, and use ' for last-pane
unbind "'"
bind "'" last-pane
bind / command-prompt -p index "select-window -t ':%%'"

# open a man page in new pane or window
bind m command-prompt -p "man page:" "split-window -h 'exec man %%'"
bind M command-prompt -p "Man page:" "new-window -n 'man %1' 'exec man %1'"


# statusbar --------------------------------------------------------------
set -g status-utf8 on
setw -g monitor-activity on
set -g visual-activity on
setw -g allow-rename off

# Define my custom menu bar
  # status bar colors
  set -g status-bg black
  set -g status-fg white

  # alignment settings
  set-option -g status-justify centre

  # status left options
  set-option -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[fg=green]] #[fg=yellow]#I #[fg=cyan]#P'
  set-option -g status-left-length 20

  # window list options
  setw -g window-status-format "#[fg=white]#[bg=blue] #I #[bg=blue]#[fg=white] #W "
  setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] *#I #[fg=white,bold]#[bg=cyan] [#W] "
  setw -g window-status-content-attr bold,blink,reverse

  # status right options
  set -g status-right '#[fg=green][#[fg=cyan]%m/%d #[fg=white]%H:%M]'

